{
  "id": "/sports-cloud",
  "apps": [],
  "groups": [
    
    {
      "id": "/sports-cloud/data",
      "apps": [],
      "groups": [
        {
          "id": "/sports-cloud/data/indexing",
          "apps": [
            {
              "id": "/sports-cloud/data/indexing/elastic",
              "connected": true,
              "recovered": false,
              "backoffFactor": 1.15,
              "backoffSeconds": 1,
              "cpus": 0.5,
              "disk": 0,
              "instances": 1,
              "maxLaunchDelaySeconds": 3600,
              "mem": 2048,
              "gpus": 0,
              "container": {
                "portMappings": [
                  {
                    "containerPort": 9200,
                    "hostPort": 0,
                    "labels": {
                      "VIP_0": "/data/:9200"
                    },
                    "protocol": "tcp",
                    "servicePort": 10000,
                    "name": "elastic-endpoint"
                  }
                ],
                "type": "DOCKER",
                "volumes": [
                  {
                    "containerPath": "/usr/share/elasticsearch/data",
                    "hostPath": "/data/apps/sports-cloud/elastic/data",
                    "mode": "RW"
                  }
                ],
                "docker": {
                  "image": "docker.elastic.co/elasticsearch/elasticsearch:5.6.5",
                  "forcePullImage": false,
                  "privileged": false,
                  "parameters": []
                }
              },
              "env": {
                "ES_JAVA_OPTS": "-Xms512m -Xmx512m",
                "xpack.security.enabled": "false"
              },
              "healthChecks": [
                {
                  "gracePeriodSeconds": 900,
                  "intervalSeconds": 30,
                  "maxConsecutiveFailures": 0,
                  "portIndex": 0,
                  "timeoutSeconds": 30,
                  "delaySeconds": 15,
                  "protocol": "MESOS_HTTP",
                  "path": "/_cat/nodes"
                }
              ],
             "networks": [
                {
                "name": "dcos",
                "mode": "container"
                }
              ],
              "requirePorts": false,
              "upgradeStrategy": {
                "maximumOverCapacity": 1,
                "minimumHealthCapacity": 1
              },
              "killSelection": "YOUNGEST_FIRST",
              "unreachableStrategy": {
                "inactiveAfterSeconds": 300,
                "expungeAfterSeconds": 600
              },
              "fetch": [],
              "constraints": []
            }
          ],
          "groups": [],
          "dependencies": []
        }
      ],
      "dependencies": []
    },
    {
      "id": "/sports-cloud/online",
      "apps": [
        {
          "id": "/sports-cloud/online/rest-server",
          "args": [
            "/root/startup.sh"
          ],
          "container": {
            "type": "DOCKER",
            "docker": {
              "image": "registry.marathon.l4lb.thisdcos.directory:5000/sports-cloud-dcos-rest",
              "forcePullImage": true
            },
            "portMappings": [
              {
                "hostPort": 9080,
                "containerPort": 9080,
                "protocol": "tcp",
                "name": "sports-cloud-rest-endpoint"
              }
            ]
          },
          "networks": [
            {
              "mode": "container/bridge"
            }
          ],
          "instances": 1,
          "cpus": 0.3,
          "mem": 1024,
          "disk": 1000,
          "acceptedResourceRoles": [
            "slave_public"
          ],
          "healthChecks": [
            {
              "portIndex": 0,
              "gracePeriodSeconds": 300,
              "intervalSeconds": 60,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "protocol": "MESOS_HTTP",
              "path": "/rest/v1/healthcheck"
            }
          ]
        }
      ],
      "groups": [],
      "dependencies": [
        "/tools",
        "/sports-cloud/data"
      ]
    },
    {
      "id": "/sports-cloud/offline",
      "apps": [],
      "groups": [
        {
          "id": "/sports-cloud/offline/streaming-platform",
          "apps": [],
          "groups": [
            {
              "id": "/sports-cloud/offline/streaming-platform/confluent",
              "apps": [
                {
                  "id": "/sports-cloud/offline/streaming-platform/confluent/confluent-kafka",
                  "connected": true,
                  "recovered": false,
                  "TASK_UNREACHABLE": 0,
                  "backoffFactor": 1.15,
                  "backoffSeconds": 1,
                  "cmd": "export LD_LIBRARY_PATH=$MESOS_SANDBOX/libmesos-bundle/lib:$LD_LIBRARY_PATH; export MESOS_NATIVE_JAVA_LIBRARY=$(ls $MESOS_SANDBOX/libmesos-bundle/lib/libmesos-*.so); export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/); export JAVA_HOME=${JAVA_HOME%/}; export PATH=$(ls -d $JAVA_HOME/bin):$PATH && export JAVA_OPTS=\"-Xms256M -Xmx1024M\" && ./confluent-kafka-scheduler/bin/confluent-kafka ./confluent-kafka-scheduler/svc.yml",
                  "cpus": 1,
                  "disk": 0,
                  "env": {
                    "TASKCFG_ALL_KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC": "_confluent-metrics",
                    "TASKCFG_ALL_KAFKA_REPLICA_SOCKET_RECEIVE_BUFFER_BYTES": "65536",
                    "TASKCFG_ALL_KAFKA_REPLICA_SOCKET_TIMEOUT_MS": "30000",
                    "TASKCFG_ALL_KAFKA_LOG_PREALLOCATE": "false",
                    "TASKCFG_ALL_KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE": "false",
                    "TASKCFG_ALL_KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE": "true",
                    "TASKCFG_ALL_KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS": "300000",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_DELETE_RETENTION_MS": "86400000",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_THREADS": "1",
                    "TASKCFG_ALL_KAFKA_QUOTA_WINDOW_SIZE_SECONDS": "1",
                    "TASKCFG_ALL_KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS": "1",
                    "TASKCFG_ALL_KAFKA_METRICS_SAMPLE_WINDOW_MS": "30000",
                    "TASKCFG_ALL_KAFKA_AUTO_CREATE_TOPICS_ENABLE": "true",
                    "TASKCFG_ALL_KAFKA_MESSAGE_MAX_BYTES": "1000012",
                    "TASKCFG_ALL_KAFKA_LOG_FLUSH_INTERVAL_MESSAGES": "9223372036854775807",
                    "TASKCFG_ALL_KAFKA_CONTROLLED_SHUTDOWN_MAX_RETRIES": "3",
                    "BROKER_MEM": "1024",
                    "BROKER_COUNT": "1",
                    "TASKCFG_ALL_KAFKA_OFFSET_METADATA_MAX_BYTES": "4096",
                    "TASKCFG_ALL_KAFKA_MAX_CONNECTIONS_PER_IP": "2147483647",
                    "TASKCFG_ALL_KAFKA_NUM_IO_THREADS": "8",
                    "TASKCFG_ALL_KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS": "30000",
                    "TASKCFG_ALL_KAFKA_ZOOKEEPER_SYNC_TIME_MS": "2000",
                    "TASKCFG_ALL_KAFKA_OFFSETS_RETENTION_MINUTES": "1440",
                    "BROKER_DISK_TYPE": "ROOT",
                    "TASKCFG_ALL_KAFKA_OFFSETS_TOPIC_SEGMENT_BYTES": "104857600",
                    "TASKCFG_ALL_KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS": "6000",
                    "BROKER_CPUS": "1",
                    "TASKCFG_ALL_KAFKA_QUOTA_CONSUMER_DEFAULT": "9223372036854775807",
                    "TASKCFG_ALL_KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS": "1",
                    "SERVICE_NAME": "confluent-kafka",
                    "JAVA_URI": "https://downloads.mesosphere.com/java/jre-8u144-linux-x64.tar.gz",
                    "TASKCFG_ALL_METRIC_REPORTERS": "io.confluent.metrics.reporter.ConfluentMetricsReporter,com.airbnb.kafka.kafka09.StatsdMetricsReporter",
                    "TASKCFG_ALL_KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID": "anonymous",
                    "TASKCFG_ALL_KAFKA_OFFSETS_COMMIT_TIMEOUT_MS": "5000",
                    "TASKCFG_ALL_KAFKA_REQUEST_TIMEOUT_MS": "30000",
                    "TASKCFG_ALL_KAFKA_METRICS_REPORTERS": "com.airbnb.kafka.kafka08.StatsdMetricsReporter",
                    "TASKCFG_ALL_KAFKA_LOG_SEGMENT_DELETE_DELAY_MS": "60000",
                    "TASKCFG_ALL_KAFKA_REPLICA_FETCH_WAIT_MAX_MS": "500",
                    "CONFIG_TEMPLATE_PATH": "confluent-kafka-scheduler",
                    "BROKER_DISK_PATH": "kafka-broker-data",
                    "TASKCFG_ALL_KAFKA_REPLICA_HIGH_WATERMARK_CHECKPOINT_INTERVAL_MS": "5000",
                    "PLACEMENT_CONSTRAINTS": "hostname:MAX_PER:1",
                    "BOOTSTRAP_URI": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.30.1/bootstrap.zip",
                    "TASKCFG_ALL_KAFKA_QUOTA_PRODUCER_DEFAULT": "9223372036854775807",
                    "TASKCFG_ALL_KAFKA_SOCKET_REQUEST_MAX_BYTES": "104857600",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_DEDUPE_BUFFER_SIZE": "134217728",
                    "CLIENT_STATSD_URI": "http://downloads.mesosphere.com/kafka/assets/java-dogstatsd-client-2.3.jar",
                    "BROKER_JAVA_HEAP": "1024",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_IO_BUFFER_SIZE": "524288",
                    "TASKCFG_ALL_KAFKA_BACKGROUND_THREADS": "5",
                    "BROKER_PORT": "0",
                    "TASKCFG_ALL_KAFKA_CONTROLLED_SHUTDOWN_RETRY_BACKOFF_MS": "5000",
                    "TASKCFG_ALL_KAFKA_LOG_FLUSH_OFFSET_CHECKPOINT_INTERVAL_MS": "60000",
                    "DEPLOY_STRATEGY": "serial",
                    "KAFKA_VERSION_PATH": "confluent-3.3.0",
                    "TASKCFG_ALL_KAFKA_LOG_ROLL_HOURS": "168",
                    "TASKCFG_ALL_KAFKA_REPLICA_LAG_TIME_MAX_MS": "10000",
                    "TASKCFG_ALL_KAFKA_LOG_MESSAGE_FORMAT_VERSION": "0.11.0",
                    "LIBMESOS_URI": "https://downloads.mesosphere.io/libmesos-bundle/libmesos-bundle-1.10-1.4-63e0814.tar.gz",
                    "SERVICE_USER": "nobody",
                    "TASKCFG_ALL_KAFKA_REPLICA_FETCH_BACKOFF_MS": "1000",
                    "TASKCFG_ALL_KAFKA_REPLICA_FETCH_MAX_BYTES": "1048576",
                    "TASKCFG_ALL_KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR": "1",
                    "TASKCFG_ALL_KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS": "300",
                    "TASKCFG_ALL_KAFKA_NUM_REPLICA_FETCHERS": "1",
                    "TASKCFG_ALL_KAFKA_NUM_PARTITIONS": "1",
                    "TASKCFG_ALL_KAFKA_SOCKET_RECEIVE_BUFFER_BYTES": "102400",
                    "KAFKA_STATSD_URI": "http://downloads.mesosphere.com/kafka/assets/kafka-statsd-metrics2-0.5.3.jar",
                    "TASKCFG_ALL_KAFKA_SOCKET_SEND_BUFFER_BYTES": "102400",
                    "TASKCFG_ALL_KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS": "-1",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_MIN_CLEANABLE_RATIO": "0.5",
                    "TASKCFG_ALL_KAFKA_AUTO_LEADER_REBALANCE_ENABLE": "true",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_ENABLE": "true",
                    "TASKCFG_ALL_KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS": "6000",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_BACKOFF_MS": "15000",
                    "TASKCFG_ALL_KAFKA_OFFSETS_LOAD_BUFFER_SIZE": "5242880",
                    "EXECUTOR_URI": "http://downloads.mesosphere.com/dcos-commons/artifacts/0.30.1/executor.zip",
                    "TASKCFG_ALL_KAFKA_ADVERTISE_HOST": "set",
                    "MESOS_API_VERSION": "V0",
                    "TASKCFG_ALL_KAFKA_OFFSETS_TOPIC_COMPRESSION_CODEC": "0",
                    "TASKCFG_ALL_KAFKA_INTER_BROKER_PROTOCOL_VERSION": "0.11.0",
                    "TASKCFG_ALL_KAFKA_LOG_RETENTION_HOURS": "168",
                    "TASKCFG_ALL_KAFKA_CONTROLLED_SHUTDOWN_ENABLE": "true",
                    "TASKCFG_ALL_KAFKA_LOG_FLUSH_SCHEDULER_INTERVAL_MS": "9223372036854775807",
                    "TASKCFG_ALL_KAFKA_PRODUCER_PURGATORY_PURGE_INTERVAL_REQUESTS": "1000",
                    "KAFKA_JAVA_URI": "https://downloads.mesosphere.com/java/jre-8u144-linux-x64.tar.gz",
                    "TASKCFG_ALL_KAFKA_CONNECTIONS_MAX_IDLE_MS": "600000",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_IO_BUFFER_LOAD_FACTOR": "0.9",
                    "TASKCFG_ALL_KAFKA_FETCH_PURGATORY_PURGE_INTERVAL_REQUESTS": "1000",
                    "TASKCFG_ALL_KAFKA_DEFAULT_REPLICATION_FACTOR": "1",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANER_IO_MAX_BYTES_PER_SECOND": "1.7976931348623157E308",
                    "BROKER_KILL_GRACE_PERIOD": "30",
                    "KAFKA_URI": "https://packages.confluent.io/archive/3.3/confluent-3.3.0-2.11.tar.gz",
                    "TASKCFG_ALL_KAFKA_NUM_NETWORK_THREADS": "3",
                    "TASKCFG_ALL_KAFKA_LOG_CLEANUP_POLICY": "delete",
                    "TASKCFG_ALL_KAFKA_LOG_ROLL_JITTER_HOURS": "0",
                    "TASKCFG_ALL_KAFKA_OFFSETS_RETENTION_CHECK_INTERVAL_MS": "600000",
                    "TASKCFG_ALL_KAFKA_QUOTA_WINDOW_NUM": "11",
                    "TASKCFG_ALL_KAFKA_LOG_INDEX_SIZE_MAX_BYTES": "10485760",
                    "TASKCFG_ALL_KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR": "1",
                    "TASKCFG_ALL_KAFKA_RESERVED_BROKER_MAX_ID": "1000",
                    "TASKCFG_ALL_KAFKA_LOG_INDEX_INTERVAL_BYTES": "4096",
                    "TASKCFG_ALL_KAFKA_QUEUED_MAX_REQUESTS": "500",
                    "BROKER_DISK_SIZE": "20000",
                    "TASKCFG_ALL_KAFKA_MIN_INSYNC_REPLICAS": "1",
                    "TASKCFG_ALL_KAFKA_LOG_SEGMENT_BYTES": "1073741824",
                    "TASKCFG_ALL_KAFKA_LOG_RETENTION_BYTES": "5000",
                    "FRAMEWORK_LOG_LEVEL": "INFO",
                    "TASKCFG_ALL_KAFKA_DELETE_TOPIC_ENABLE": "false",
                    "TASKCFG_ALL_KAFKA_COMPRESSION_TYPE": "producer",
                    "TASKCFG_ALL_KAFKA_METRICS_NUM_SAMPLES": "2",
                    "TASKCFG_ALL_KAFKA_REPLICA_FETCH_MIN_BYTES": "1",
                    "TASKCFG_ALL_KAFKA_LEADER_IMBALANCE_PER_BROKER_PERCENTAGE": "10",
                    "TASKCFG_ALL_KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS": "300000"
                  },
                  "labels": {
                    "DCOS_COMMONS_UNINSTALL": "true",
                    "DCOS_SERVICE_SCHEME": "http",
                    "DCOS_PACKAGE_SOURCE": "https://universe.mesosphere.com/repo",
                    "DCOS_SERVICE_NAME": "confluent-kafka",
                    "DCOS_PACKAGE_FRAMEWORK_NAME": "confluent-kafka",
                    "DCOS_SERVICE_PORT_INDEX": "0",
                    "DCOS_PACKAGE_VERSION": "2.0.1.1-3.3.0e",
                    "DCOS_COMMONS_API_VERSION": "v1",
                    "DCOS_PACKAGE_NAME": "confluent-kafka",
                    "MARATHON_SINGLE_INSTANCE_APP": "true"
                  },
                  "fetch": [
                    {
                      "uri": "http://downloads.mesosphere.com/dcos-commons/artifacts/0.30.1/executor.zip",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    },
                    {
                      "uri": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.30.1/bootstrap.zip",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    },
                    {
                      "uri": "https://downloads.mesosphere.com/confluent-kafka/assets/2.0.1-3.3.0e/confluent-kafka-scheduler.zip",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    },
                    {
                      "uri": "https://downloads.mesosphere.io/libmesos-bundle/libmesos-bundle-1.10-1.4-63e0814.tar.gz",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    },
                    {
                      "uri": "https://packages.confluent.io/archive/3.3/confluent-3.3.0-2.11.tar.gz",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    },
                    {
                      "uri": "https://downloads.mesosphere.com/java/jre-8u144-linux-x64.tar.gz",
                      "extract": true,
                      "executable": false,
                      "cache": false
                    }
                  ],
                  "healthChecks": [
                    {
                      "gracePeriodSeconds": 900,
                      "ignoreHttp1xx": false,
                      "intervalSeconds": 30,
                      "maxConsecutiveFailures": 0,
                      "portIndex": 0,
                      "timeoutSeconds": 30,
                      "delaySeconds": 15,
                      "protocol": "HTTP",
                      "path": "/v1/plans/deploy"
                    },
                    {
                      "gracePeriodSeconds": 900,
                      "ignoreHttp1xx": false,
                      "intervalSeconds": 30,
                      "maxConsecutiveFailures": 0,
                      "portIndex": 0,
                      "timeoutSeconds": 30,
                      "delaySeconds": 15,
                      "protocol": "HTTP",
                      "path": "/v1/plans/recovery"
                    }
                  ],
                  "instances": 1,
                  "maxLaunchDelaySeconds": 3600,
                  "mem": 1536,
                  "gpus": 0,
                  "networks": [
                    {
                      "mode": "host"
                    }
                  ],
                  "portDefinitions": [
                    {
                      "labels": {
                        "VIP_0": "/api.confluent-kafka:80"
                      },
                      "name": "api",
                      "protocol": "tcp",
                      "port": 10001
                    }
                  ],
                  "requirePorts": false,
                  "upgradeStrategy": {
                    "maximumOverCapacity": 0,
                    "minimumHealthCapacity": 0
                  },
                  "user": "nobody",
                  "killSelection": "YOUNGEST_FIRST",
                  "unreachableStrategy": {
                    "inactiveAfterSeconds": 300,
                    "expungeAfterSeconds": 600
                  },
                  "constraints": [],
                  "container": {
                    "type": "MESOS",
                    "volumes": []
                  }
                },
                {
                  "id": "/sports-cloud/offline/streaming-platform/confluent/connect",
                  "acceptedResourceRoles": [
                    "*"
                  ],
                  "backoffFactor": 1.15,
                  "backoffSeconds": 1,
                  "container": {
                    "portMappings": [
                      {
                        "containerPort": 8083,
                        "hostPort": 0,
                        "labels": {
                          "VIP_0": "connect:8083"
                        },
                        "protocol": "tcp",
                        "servicePort": 10002
                      }
                    ],
                    "type": "DOCKER",
                    "volumes": [
                      {
                        "containerPath": "/data/kafka/connect/libs",
                        "hostPath": "/data/apps/sports-cloud/kafka/connect/libs",
                        "mode": "RW"
                      }
                    ],
                    "docker": {
                      "image": "registry.marathon.l4lb.thisdcos.directory:5000/cp-kafka-connect:3.3.0",
                      "forcePullImage": true,
                      "privileged": false,
                      "parameters": []
                    }
                  },
                  "cpus": 1,
                  "disk": 0,
                  "env": {
                    "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE": "true",
                    "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE": "true",
                    "CONNECT_CONSUMER_INTERCEPTOR_CLASSES": "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor",
                    "CONNECT_PRODUCER_INTERCEPTOR_CLASSES": "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor",
                    "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL": "http://schema-registry.marathon.l4lb.thisdcos.directory:8081",
                    "CONNECT_KEY_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
                    "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL": "http://schema-registry.marathon.l4lb.thisdcos.directory:8081",
                    "CONNECT_PLUGIN_PATH": "/data/kafka/connect/libs",
                    "CONNECT_REST_PORT": "8083",
                    "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR": "1",
                    "CONNECT_BOOTSTRAP_SERVERS": "broker.confluent-kafka.l4lb.thisdcos.directory:9092",
                    "CONNECT_GROUP_ID": "dcos-connect-group",
                    "CONNECT_INTERNAL_KEY_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
                    "CONNECT_STATUS_STORAGE_TOPIC": "dcos-connect-status",
                    "CONNECT_VALUE_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
                    "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR": "1",
                    "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR": "1",
                    "CONNECT_ZOOKEEPER_CONNECT": "master.mesos:2181/dcos-service-confluent-kafka",
                    "KAFKA_HEAP_OPTS": "-Xmx1024M",
                    "CONNECT_INTERNAL_VALUE_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
                    "CONNECT_OFFSET_STORAGE_TOPIC": "dcos-connect-offsets",
                    "CONNECT_CONFIG_STORAGE_TOPIC": "dcos-connect-configs"
                  },
                  "labels": {
                    "DCOS_SERVICE_SCHEME": "http",
                    "DCOS_PACKAGE_SOURCE": "https://universe.mesosphere.com/repo",
                    "DCOS_SERVICE_NAME": "connect",
                    "DCOS_SERVICE_PORT_INDEX": "0",
                    "DCOS_PACKAGE_VERSION": "1.0.0-3.3.0",
                    "DCOS_PACKAGE_NAME": "confluent-connect"
                  },
                  "healthChecks": [
                    {
                      "gracePeriodSeconds": 60,
                      "ignoreHttp1xx": false,
                      "intervalSeconds": 60,
                      "maxConsecutiveFailures": 3,
                      "portIndex": 0,
                      "timeoutSeconds": 20,
                      "delaySeconds": 15,
                      "protocol": "HTTP",
                      "path": "/"
                    }
                  ],
                  "instances": 2,
                  "maxLaunchDelaySeconds": 3600,
                  "mem": 1536,
                  "gpus": 0,
                  "networks": [
                    {
                      "mode": "container/bridge"
                    }
                  ],
                  "requirePorts": false,
                  "upgradeStrategy": {
                    "maximumOverCapacity": 1,
                    "minimumHealthCapacity": 1
                  },
                  "killSelection": "YOUNGEST_FIRST",
                  "unreachableStrategy": {
                    "inactiveAfterSeconds": 300,
                    "expungeAfterSeconds": 600
                  },
                  "fetch": [],
                  "constraints": [],
                  "dependencies": [
                    "/sports-cloud/offline/streaming-platform/confluent/confluent-kafka"
                  ]
                }
              ],
              "groups": [],
              "dependencies": []
            }
          ],
          "dependencies": []
        },
        {
          "id": "/sports-cloud/offline/batch-processing",
          "apps": [
            {
              "id": "/sports-cloud/offline/batch-processing/spark",
              "connected": true,
              "recovered": false,
              "TASK_UNREACHABLE": 0,
              "backoffFactor": 1.15,
              "backoffSeconds": 1,
              "cmd": "/sbin/init.sh",
              "container": {
                "type": "DOCKER",
                "volumes": [],
                "docker": {
                  "image": "registry.marathon.l4lb.thisdcos.directory:5000/spark:2.0.1-2.2.0-1-hadoop-2.6",
                  "forcePullImage": true,
                  "privileged": false,
                  "parameters": [
                    {
                      "key": "user",
                      "value": "root"
                    }
                  ]
                }
              },
              "cpus": 1,
              "disk": 0,
              "env": {
                "DCOS_SERVICE_NAME": "spark",
                "NO_BOOTSTRAP": "true",
                "SPARK_DISPATCHER_MESOS_ROLE": "*",
                "SPARK_USER": "root",
                "SPARK_LOG_LEVEL": "INFO"
              },
              "healthChecks": [
                {
                  "gracePeriodSeconds": 5,
                  "ignoreHttp1xx": false,
                  "intervalSeconds": 60,
                  "maxConsecutiveFailures": 3,
                  "portIndex": 2,
                  "timeoutSeconds": 10,
                  "delaySeconds": 15,
                  "protocol": "HTTP",
                  "path": "/"
                }
              ],
              "instances": 1,
              "maxLaunchDelaySeconds": 3600,
              "mem": 1024,
              "gpus": 0,
              "networks": [
                {
                  "mode": "host"
                }
              ],
              "portDefinitions": [
                {
                  "protocol": "tcp",
                  "port": 10000
                },
                {
                  "protocol": "tcp",
                  "port": 10003
                },
                {
                  "protocol": "tcp",
                  "port": 10004
                }
              ],
              "requirePorts": false,
              "upgradeStrategy": {
                "maximumOverCapacity": 1,
                "minimumHealthCapacity": 1
              },
              "user": "root",
              "killSelection": "YOUNGEST_FIRST",
              "unreachableStrategy": {
                "inactiveAfterSeconds": 300,
                "expungeAfterSeconds": 600
              },
              "fetch": [],
              "constraints": []
            }
          ],
          "groups": [],
          "dependencies": [
            "/sports-cloud/offline/streaming-platform"
          ]
        }
      ],
      "dependencies": [
        "/tools",
        "/sports-cloud/data"
      ]
    }
  ],
  "dependencies": []
}